CREATE TABLE Produk (
    id_produk INT AUTO_INCREMENT PRIMARY KEY,
    nama_produk VARCHAR(100),
    stok INT,
    harga DECIMAL(10,2)
);

CREATE TABLE Penjualan (
    id_penjualan INT AUTO_INCREMENT PRIMARY KEY,
    id_produk INT,
    jumlah INT,
    tanggal_penjualan DATE DEFAULT CURRENT_DATE,
    FOREIGN KEY (id_produk) REFERENCES Produk(id_produk)
);

CREATE TABLE Log_Stok (
    id_log INT AUTO_INCREMENT PRIMARY KEY,
    id_produk INT,
    aksi VARCHAR(50),
    jumlah INT,
    info VARCHAR(255),
    tanggal_log TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

INSERT INTO Produk(nama_produk, stok, harga) VALUES
('Mouse Logitech', 50, 150000),
('Keyboard Mechanical', 30, 350000),
('Monitor 24 Inch', 20, 1500000),
('Webcam Full HD', 25, 500000);

INSERT INTO Penjualan(id_produk, jumlah) VALUES
(1, 3),
(2, 2),
(3, 1);



DELIMITER $$
CREATE TRIGGER trg_before_insert_penjualan
BEFORE INSERT ON Penjualan
FOR EACH ROW
BEGIN
    DECLARE stok_saat_ini INT;
    SELECT stok INTO stok_saat_ini FROM Produk WHERE id_produk = NEW.id_produk;
    IF stok_saat_ini < NEW.jumlah THEN
        SIGNAL SQLSTATE '45000'
        SET MESSAGE_TEXT = 'Stok tidak cukup untuk penjualan ini.';
    END IF;
    UPDATE Produk SET stok = stok - NEW.jumlah WHERE id_produk = NEW.id_produk;
END$$
DELIMITER ;

DELIMITER $$
CREATE TRIGGER trg_after_delete_penjualan
AFTER DELETE ON Penjualan
FOR EACH ROW
BEGIN
    INSERT INTO Log_Stok(id_produk, aksi, jumlah, info)
    VALUES(OLD.id_produk, 'Batal Penjualan', OLD.jumlah, 'AFTER DELETE log');
END$$
DELIMITER ;

DELIMITER $$
CREATE TRIGGER trg_after_update_penjualan
AFTER UPDATE ON Penjualan
FOR EACH ROW
BEGIN
    INSERT INTO Log_Stok(id_produk, aksi, jumlah, info)
    VALUES(NEW.id_produk, 'Update Penjualan', NEW.jumlah - OLD.jumlah, 'AFTER UPDATE log');
END$$
DELIMITER ;

SELECT pr.nama_produk, SUM(p.jumlah) AS total_terjual
FROM Penjualan p
JOIN Produk pr ON p.id_produk = pr.id_produk
GROUP BY p.id_produk
ORDER BY total_terjual DESC
LIMIT 1;

START TRANSACTION;
INSERT INTO Penjualan(id_produk, jumlah) VALUES (2, 2);
INSERT INTO Penjualan(id_produk, jumlah) VALUES (3, 999);
ROLLBACK;
COMMIT;
